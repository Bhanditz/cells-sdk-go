// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// RestFrontBinaryRequest rest front binary request
// swagger:model restFrontBinaryRequest
type RestFrontBinaryRequest struct {

	// binary type
	BinaryType RestFrontBinaryType `json:"BinaryType,omitempty"`

	// Uuid
	UUID string `json:"Uuid,omitempty"`
}

// Validate validates this rest front binary request
func (m *RestFrontBinaryRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBinaryType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RestFrontBinaryRequest) validateBinaryType(formats strfmt.Registry) error {

	if swag.IsZero(m.BinaryType) { // not required
		return nil
	}

	if err := m.BinaryType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("BinaryType")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RestFrontBinaryRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RestFrontBinaryRequest) UnmarshalBinary(b []byte) error {
	var res RestFrontBinaryRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
