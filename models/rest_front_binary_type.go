// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// RestFrontBinaryType rest front binary type
// swagger:model restFrontBinaryType
type RestFrontBinaryType string

const (

	// RestFrontBinaryTypeUSER captures enum value "USER"
	RestFrontBinaryTypeUSER RestFrontBinaryType = "USER"

	// RestFrontBinaryTypeGLOBAL captures enum value "GLOBAL"
	RestFrontBinaryTypeGLOBAL RestFrontBinaryType = "GLOBAL"
)

// for schema
var restFrontBinaryTypeEnum []interface{}

func init() {
	var res []RestFrontBinaryType
	if err := json.Unmarshal([]byte(`["USER","GLOBAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		restFrontBinaryTypeEnum = append(restFrontBinaryTypeEnum, v)
	}
}

func (m RestFrontBinaryType) validateRestFrontBinaryTypeEnum(path, location string, value RestFrontBinaryType) error {
	if err := validate.Enum(path, location, value, restFrontBinaryTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this rest front binary type
func (m RestFrontBinaryType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateRestFrontBinaryTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
